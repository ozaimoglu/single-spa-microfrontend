{"version":3,"sources":["webpack:///./src/Trivia-React/src/App.scss","webpack:///./src/Trivia-React/src/Containers/MainScreenContainer.js","webpack:///./src/Trivia-React/src/Components/HeaderComponent.js","webpack:///./src/Trivia-React/src/Components/QuestionComponent.js","webpack:///./src/Trivia-React/src/Components/EndQuestionComponent.js","webpack:///./src/Trivia-React/src/Containers/GameScreenContainer.js","webpack:///./src/Trivia-React/src/Containers/TimesUpScreenContainer.js","webpack:///./src/Trivia-React/src/App.js","webpack:///./src/Trivia-React/src/react-mf-trivia.js","webpack:///./src/Trivia-React/src/App.scss?6944"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","MainScreenContainer","props","gotoGameScreen","state","quizDifficulty","quizCategoty","value","sessionStorage","setItem","this","setState","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Container","className","Col","Row","options","height","width","Dropdown","Toggle","variant","id","Menu","Item","onClick","setDifficulty","getItem","Button","React","Component","HeaderComponent","remainingTime","clearInterval","myInterval","gotoTimeIsUpScreen","setInterval","timeExpired","questionNumber","score","QuestionComponent","hasJoker","useJoker","bind","text","txt","document","createElement","innerHTML","a","length","j","Math","floor","random","answers","key","clickedAnswer","decodeText","question","correct_answer","incorrect_answers","shuffle","generateAnswerButtons","EndQuestionComponent","isCorrect","correctData","wrongData","questionScore","totalScore","clickNextQuestion","GameScreenContainer","questions","showQuestion","loaded","headerComponent","createRef","fetch","then","res","json","result","results","current","startCountdown","error","Swal","fire","title","icon","questionsJson","resetCountdown","stopCountdown","newData","splice","gotoMainScreen","ref","history","TimesUpScreenContainer","gotoHomeScreen","App","route","reactLifecycles","singleSpaReact","ReactDOM","rootComponent","errorBoundary","err","info","domElementGetter","el","getElementById","body","appendChild","bootstrap","mount","unmount","api","content","__esModule","default","locals"],"mappings":"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","file":"6.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Baloo+2);\"]);\n// Module\nexports.push([module.id, \".mainContainer{font-family:'Baloo 2';font-size:18px;border:3px solid #295f66;width:50%;height:720px;margin:auto;background-color:rgba(0,81,255,0.2);padding:0px !important}@media (max-width: 768px){.mainContainer{width:100% !important;height:100vh}}.mainContainer .centerColumn{width:70%;margin:auto}.mainContainer .centerColumn .imageRow{margin-top:30px;margin-bottom:30px}.mainContainer .centerColumn .dropdownButton{margin-top:20px}.mainContainer .centerColumn .startButtonRow{margin-top:80px}.mainContainer .centerColumn .startButtonRow .startButton{width:80%}.mainContainer .scoreRow{font-size:24px;margin-top:20px;margin-bottom:20px}.headerComponent{width:100%;height:10%;background-color:rgba(82,82,87,0.2);text-align:center}.questionComponent{width:60%;text-align:center;height:90%;margin:auto}.questionComponent .answerButton{margin-top:20px}.questionComponent .answerButton .deneme{width:50%}.questionComponent .btn:focus{background-color:#007bff;border-color:#007bff}.questionComponent .jokerButton{margin-top:120px;width:60%;height:10%}.endQuestionComponent{margin-top:20px}.endQuestionComponent .endQuestionRow {margin-top:20px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from 'react';\r\nimport '../App.scss';\r\nimport {Container, Col, Row, Button, Dropdown} from 'react-bootstrap';\r\nimport Lottie from 'react-lottie';\r\nimport animationData from '../assets/logo_lottie.json'\r\n\r\nclass MainScreenContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            quizDifficulty : null,\r\n            quizCategoty: null\r\n        }\r\n    }\r\n\r\n    gotoGameScreen = () => {\r\n        //this.props.history.push(\"/game\");\r\n        this.props.gotoGameScreen();\r\n    }\r\n\r\n    //Level stored on sessionStroage because I dont want to send on URL\r\n    setDifficulty(value) {\r\n        if(value !== \"mixed\") {\r\n            sessionStorage.setItem(\"quizDifficulty\", value);\r\n            this.setState({quizDifficulty: value})\r\n        }else {\r\n            this.setState({quizDifficulty: \"Mixed\"})\r\n        }\r\n    }\r\n\r\n\r\n    //TODO\r\n    setCategory(value) {\r\n        sessionStorage.setItem(\"quizCategoty\", value);\r\n        this.setState({quizCategoty: value})\r\n    }\r\n\r\n    render() {\r\n        const defaultOptions = {\r\n            loop: true,\r\n            autoplay: true, \r\n            animationData: animationData,\r\n            rendererSettings: {\r\n              preserveAspectRatio: 'xMidYMid slice'\r\n            }\r\n          };\r\n        return(\r\n            <Container className=\"mainContainer\">\r\n                <Col className=\"centerColumn justify-content-center\">\r\n                    <Row className=\"imageRow justify-content-center\">\r\n                        <Lottie options={defaultOptions}\r\n                            height={200}\r\n                            width={200}/>\r\n                    </Row>\r\n                    <Row className=\"nameRow justify-content-center\">\r\n                        A TRIVIA GAME\r\n                    </Row>\r\n                    <Row className=\"dropdownButton justify-content-center\">\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                                {this.state.quizDifficulty ? this.state.quizDifficulty : \"Difficulty\" }\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item onClick={() => this.setDifficulty(\"easy\")}>Easy</Dropdown.Item>\r\n                                <Dropdown.Item onClick={() => this.setDifficulty(\"medium\")}>Medium</Dropdown.Item>\r\n                                <Dropdown.Item onClick={() => this.setDifficulty(\"hard\")}>Hard</Dropdown.Item>\r\n                                <Dropdown.Item onClick={() => this.setDifficulty(\"mixed\")}>Mixed</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </Row>\r\n                    {sessionStorage.getItem(\"userScore\") != null ? <Row className=\"justify-content-center scoreRow\">Last Score : {sessionStorage.getItem(\"userScore\")}</Row> : null}\r\n                    <Row className=\"startButtonRow justify-content-center\">\r\n                        <Button onClick={this.gotoGameScreen} variant=\"primary\" className=\"startButton\">\r\n                            START GAME\r\n                        </Button>\r\n                    </Row>\r\n                </Col>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainScreenContainer;","import React from 'react';\r\nimport '../App.scss';\r\nimport {Container, Col, Row, Button} from 'react-bootstrap';\r\n\r\nclass HeaderComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            remainingTime: this.props.remainingTime\r\n        }\r\n    }\r\n\r\n    // when last question was true, time is updated to 15\r\n    resetCountdown() {\r\n        this.setState({remainingTime: 15});\r\n    }\r\n\r\n    stopCountdown() {\r\n        clearInterval(this.myInterval);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval);\r\n    }\r\n\r\n    // go to timesup screen\r\n    timeExpired() {\r\n        clearInterval(this.myInterval);\r\n        // this.props.history.push(\"/timesUp\");\r\n        this.props.gotoTimeIsUpScreen();\r\n    }\r\n\r\n    startCountdown() {\r\n        this.myInterval = setInterval(() => {\r\n            this.setState({remainingTime : this.state.remainingTime - 1})\r\n            if(this.state.remainingTime <=0){\r\n                this.timeExpired();\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container className=\"headerComponent\">\r\n                <Row>\r\n                    <Col>\r\n                        Question {this.props.questionNumber + 1} / 10 \r\n                    </Col>\r\n                    <Col>\r\n                        {this.props.score} Points\r\n                    </Col>\r\n                    <Col>\r\n                        Time: {this.state.remainingTime} \r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderComponent;","import React from 'react';\r\nimport '../App.scss';\r\nimport {Container, Row, Button} from 'react-bootstrap';\r\n\r\nclass QuestionComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasJoker: this.props.hasJoker\r\n        }\r\n        this.useJoker = this.useJoker.bind(this);\r\n    }\r\n\r\n    //decode the question strings\r\n    decodeText(text) {\r\n        var txt = document.createElement(\"textarea\");\r\n        txt.innerHTML = text;\r\n        return txt.value;\r\n    }\r\n\r\n    // shuffle answers button\r\n    shuffle(a) {\r\n        for (let i = a.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [a[i], a[j]] = [a[j], a[i]];\r\n        }\r\n        return a;\r\n    }\r\n\r\n    generateAnswerButtons() {\r\n        let answers = [];\r\n        answers.push(\r\n            <Row key={0} className=\"justify-content-center answerButton\">\r\n                <Button className=\"shadow-none deneme\" onClick={() => this.props.clickedAnswer(\"correct\")}>{this.decodeText(this.props.question.correct_answer)}</Button>\r\n            </Row>);\r\n        for(var i = 0; i < this.props.question.incorrect_answers.length; i++){\r\n            answers.push(\r\n                <Row id={i+1} key={i+1} className=\"justify-content-center answerButton\">\r\n                    <Button className=\"deneme\" onClick={() => this.props.clickedAnswer(\"wrong\")}>{this.decodeText(this.props.question.incorrect_answers[i])}</Button>\r\n                </Row>);\r\n            \r\n        }\r\n        return this.shuffle(answers);\r\n    }\r\n\r\n    useJoker() {\r\n        this.props.useJoker();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container className=\"questionComponent\">\r\n                <Row className=\"justify-content-center\">\r\n                    {this.props.question ? this.decodeText(this.props.question.question) : null}\r\n                </Row>\r\n                {this.props.question ? this.generateAnswerButtons() : null}\r\n                {this.props.hasJoker && this.props.question != null && this.props.question.incorrect_answers.length > 2 ? <Button variant=\"danger\" onClick={this.useJoker} className=\"jokerButton\">USE 50% JOKER</Button> \r\n                : null}\r\n                \r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionComponent;","import React from 'react';\r\nimport '../App.scss';\r\nimport {Container, Row, Button} from 'react-bootstrap';\r\nimport Lottie from 'react-lottie';\r\nimport correctData from '../assets/correct-lottie.json'\r\nimport wrongData from '../assets/wrong-lottie.json'\r\n\r\nclass EndQuestionComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isCorrect: this.props.isCorrect\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const defaultOptions = {\r\n            loop: true,\r\n            autoplay: true, \r\n            animationData: this.props.isCorrect ? correctData : wrongData,\r\n            rendererSettings: {\r\n              preserveAspectRatio: 'xMidYMid slice'\r\n            }\r\n          };\r\n        return(\r\n            <Container className=\"endQuestionComponent\">\r\n                <Row className=\"justify-content-center endQuestionRow\">\r\n                <Lottie options={defaultOptions}\r\n                            height={200}\r\n                            width={200}/>\r\n                </Row>\r\n                {this.props.isCorrect ? <Row className=\"justify-content-center endQuestionRow\">\r\n                    You have earned {this.props.questionScore} points.\r\n                </Row> : <Row className=\"justify-content-center endQuestionRow\">\r\n                    You have earned total {this.props.totalScore}.\r\n                </Row>}\r\n                <Row className=\"justify-content-center endQuestionRow\">\r\n                    <Button onClick={() => this.props.clickNextQuestion()}>{this.props.isCorrect ? \"NEXT QUESTION\" : \"HOME PAGE\"}</Button>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EndQuestionComponent;","import React from 'react';\r\nimport '../App.scss';\r\nimport {Container} from 'react-bootstrap';\r\nimport HeaderComponent from '../Components/HeaderComponent';\r\nimport QuestionComponent from '../Components/QuestionComponent';\r\nimport EndQuestionComponent from '../Components/EndQuestionComponent';\r\nimport Lottie from 'react-lottie';\r\nimport animationData from '../assets/loader-lottie.json';\r\nimport Swal from 'sweetalert2';\r\nimport questionsJson from '../assets/questions.json';\r\n\r\nclass GameScreenContainer extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            questions : [],\r\n            score: 0,\r\n            remainingTime: 15,\r\n            questionNumber: 0,\r\n            quizDifficulty: sessionStorage.getItem(\"quizDifficulty\"),\r\n            hasJoker: true,\r\n            showQuestion: true,\r\n            isCorrect: true,\r\n            loaded: false\r\n        }\r\n        this.clickedAnswer = this.clickedAnswer.bind(this);\r\n        this.useJoker = this.useJoker.bind(this);\r\n        this.clickNextQuestion = this.clickNextQuestion.bind(this);\r\n        this.headerComponent = React.createRef();\r\n        sessionStorage.setItem(\"userScore\", 0);\r\n    }\r\n\r\n    //fetch questions from opentdb, if success headers countdown starts, and delete difficulty level from session storage because when go back to main screen, user still can select mixed level\r\n    componentDidMount () {\r\n        fetch(\"https://opentdb.com/api.php?amount=10\" + (this.state.quizDifficulty != \"null\" && this.state.quizDifficulty != null ? \"&difficulty=\" + this.state.quizDifficulty: \"\")).then(res => res.json()).then( (result) => {\r\n            this.setState({questions: result.results, loaded: true});\r\n            this.headerComponent.current.startCountdown();\r\n            sessionStorage.setItem(\"quizDifficulty\", null);\r\n        },(error) => {\r\n            Swal.fire({\r\n                title: 'API Error',\r\n                text: 'opentdb API is not working now!, Game will be continue with static questions.',\r\n                icon: 'warning',\r\n              }).then((result) => {\r\n                this.setState({questions: questionsJson.questions, loaded: true});\r\n                this.headerComponent.current.startCountdown();\r\n                sessionStorage.setItem(\"quizDifficulty\", null);\r\n            })\r\n          }\r\n        );\r\n    }\r\n\r\n    // update score respect to time, and check answer is true\r\n    clickedAnswer(result) {\r\n        if(result == \"correct\") {\r\n            sessionStorage.setItem(\"userScore\", this.state.score + (10 * this.headerComponent.current.state.remainingTime));\r\n            this.setState({score: this.state.score + (10 * this.headerComponent.current.state.remainingTime), remainingTime: 15, isCorrect: true, showQuestion: false});\r\n            this.headerComponent.current.resetCountdown();\r\n            this.headerComponent.current.stopCountdown();\r\n        } else {\r\n            this.setState({isCorrect: false, showQuestion: false});\r\n            this.headerComponent.current.stopCountdown();\r\n\r\n        }\r\n    }\r\n\r\n    // when use joker, questions json is updated, 2 of incorrect answer is deleted\r\n    useJoker(){\r\n        var newData = this.state.questions;\r\n        newData[this.state.questionNumber].incorrect_answers.splice(0, 2);\r\n        this.setState({\r\n            hasJoker: false,\r\n            questions: newData\r\n        })\r\n    }\r\n\r\n    clickNextQuestion() {\r\n        if(this.state.isCorrect) {\r\n            this.setState({\r\n                showQuestion: true,\r\n                questionNumber: this.state.questionNumber+1\r\n            })\r\n            this.headerComponent.current.startCountdown();\r\n        } else {\r\n            // this.props.history.push(\"/gameMenu\");\r\n            this.props.gotoMainScreen();\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        const defaultOptions = {\r\n            loop: true,\r\n            autoplay: true, \r\n            animationData: animationData,\r\n            rendererSettings: {\r\n              preserveAspectRatio: 'xMidYMid slice'\r\n            }\r\n          };\r\n        return(\r\n            <Container className=\"mainContainer\">\r\n                <HeaderComponent gotoMainScreen={this.props.gotoMainScreen} gotoGameScreen = {this.props.gotoGameScreen} gotoTimeIsUpScreen={this.props.gotoTimeIsUpScreen} ref={this.headerComponent} history={this.props.history} questionNumber={this.state.questionNumber} score={this.state.score} remainingTime={this.state.remainingTime}/>\r\n                {this.state.loaded ? this.state.showQuestion ? <QuestionComponent useJoker={this.useJoker} hasJoker={this.state.hasJoker} clickedAnswer = {this.clickedAnswer} question={this.state.questions[this.state.questionNumber]}/> :\r\n                    <EndQuestionComponent totalScore={this.state.score} questionScore={(10 * this.headerComponent.current.state.remainingTime)} clickNextQuestion={this.clickNextQuestion} isCorrect={this.state.isCorrect}/> : \r\n                    <Lottie options={defaultOptions}\r\n                                height={240}\r\n                                width={240}/>\r\n                }\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameScreenContainer;","import React from 'react';\r\nimport '../App.scss';\r\nimport {Container, Col, Button, Row} from 'react-bootstrap';\r\nimport Lottie from 'react-lottie';\r\nimport animationData from '../assets/timesup-lottie.json'\r\n\r\nclass TimesUpScreenContainer extends React.Component {\r\n    gotoHomeScreen = () => {\r\n        // this.props.history.push(\"/gameMenu\");\r\n        this.props.gotoMainScreen();\r\n    }\r\n\r\n    render() {\r\n        const defaultOptions = {\r\n            loop: true,\r\n            autoplay: true, \r\n            animationData: animationData,\r\n            rendererSettings: {\r\n              preserveAspectRatio: 'xMidYMid slice'\r\n            }\r\n          };\r\n        return(\r\n            <Container className=\"mainContainer\">\r\n                <Col>\r\n                    <Row>\r\n                        <Lottie options={defaultOptions}\r\n                                height={400}\r\n                                width={400}/>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center scoreRow\">Your Score : {sessionStorage.getItem(\"userScore\")}</Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Button onClick={this.gotoHomeScreen} variant=\"primary\">HOME SCREEN</Button>\r\n                    </Row>\r\n                </Col>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TimesUpScreenContainer;","import React from 'react';\r\nimport MainScreenContainer from './Containers/MainScreenContainer';\r\nimport GameScreenContainer from './Containers/GameScreenContainer';\r\nimport TimesUpScreenContainer from './Containers/TimesUpScreenContainer';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      route : \"/\"\r\n    }\r\n    this.gotoGameScreen = this.gotoGameScreen.bind(this);\r\n    this.gotoTimeIsUpScreen = this.gotoTimeIsUpScreen.bind(this);\r\n    this.gotoMainScreen = this.gotoMainScreen.bind(this);\r\n  }\r\n\r\n  gotoGameScreen() {\r\n    this.setState({\r\n      route : \"/game\"\r\n    })\r\n  }\r\n\r\n  gotoTimeIsUpScreen() {\r\n    this.setState({\r\n      route : \"/timesUp\"\r\n    })\r\n  }\r\n\r\n  gotoMainScreen() {\r\n    this.setState({\r\n      route : \"/\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // <Router>\r\n      //   <Switch>\r\n      //     <Route path=\"/gameMenu\" component={MainScreenContainer} exact/>\r\n      //     <Route path=\"/game\" component={GameScreenContainer}/>\r\n      //     <Route path=\"/timesUp\" component={TimesUpScreenContainer}/>\r\n      //   </Switch>\r\n      // </Router>\r\n      <div>\r\n        {\r\n          this.state.route == \"/\" ? <MainScreenContainer gotoMainScreen={this.gotoMainScreen} gotoGameScreen = {this.gotoGameScreen} gotoTimeIsUpScreen={this.gotoTimeIsUpScreen}></MainScreenContainer> \r\n          : this.state.route == \"/game\" ? <GameScreenContainer gotoMainScreen={this.gotoMainScreen}  gotoGameScreen = {this.gotoGameScreen} gotoTimeIsUpScreen={this.gotoTimeIsUpScreen}></GameScreenContainer> \r\n          : <TimesUpScreenContainer gotoMainScreen={this.gotoMainScreen}  gotoGameScreen = {this.gotoGameScreen} gotoTimeIsUpScreen={this.gotoTimeIsUpScreen}></TimesUpScreenContainer>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport rootComponent from './App.js';\r\n// Note that SingleSpaContext is a react@16.3 (if available) context that provides the singleSpa props\r\nimport singleSpaReact, {SingleSpaContext} from 'single-spa-react';\r\n\r\nfunction domElementGetter() {\r\n  let el = document.getElementById(\"trivia\");\r\n  if (!el) {\r\n    el = document.createElement(\"div\");\r\n    el.id = \"trivia\";\r\n    document.body.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\nconst reactLifecycles = singleSpaReact({\r\n  React,\r\n  ReactDOM,\r\n  rootComponent: rootComponent,\r\n  errorBoundary(err, info, props) {\r\n    // https://reactjs.org/docs/error-boundaries.html\r\n    return (\r\n      <div>This renders when a catastrophic error occurs</div>\r\n    );\r\n  },\r\n  domElementGetter\r\n});\r\nexport const bootstrap = reactLifecycles.bootstrap;\r\nexport const mount = reactLifecycles.mount;\r\nexport const unmount = reactLifecycles.unmount;","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??ref--3-2!../../../node_modules/sass-loader/dist/cjs.js!./App.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"sourceRoot":""}